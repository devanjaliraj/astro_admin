{"version":3,"sources":["views/apps/categoryhoroscope/AddCateHoro.js"],"names":["AddCateHoro","props","state","editorState","EditorState","createEmpty","onEditorStateChange","console","log","setState","changeHandler1","e","status","target","value","changeHandler","name","submitHandler","preventDefault","axiosConfig","post","then","response","data","swal","history","push","catch","error","rashiId","category","desc","RashiT","CategoryC","CategoryT","get","breadCrumbTitle","breadCrumbParent","breadCrumbActive","className","col-sm-6","render","onClick","onSubmit","this","lg","md","sm","type","category1","onChange","map","allCategory1","_id","key","title","allRashi","rashi_title","allCategory","placeholder","Ripple","color","Component"],"mappings":"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","file":"static/js/154.81ce78c0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\n//import axios from \"axios\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\n// import { useParams } from \"react-router-dom\";\r\n//import { ToastContainer, toast } from 'react-toastify';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\nimport { EditorState } from \"draft-js\";\r\nimport { data } from \"jquery\";\r\nimport swal from \"sweetalert\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport \"../../../assets/scss/plugins/extensions/editor.scss\";\r\n\r\nexport class AddCateHoro extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rashiId: \"\",\r\n      category: \"\",\r\n      desc: \"\",\r\n    };\r\n    this.state = {\r\n      RashiT: [],\r\n      CategoryC: [],\r\n      CategoryT: [],\r\n    };\r\n  }\r\n\r\n  state = {\r\n    editorState: EditorState.createEmpty(),\r\n  };\r\n\r\n  onEditorStateChange = (editorState) => {\r\n    console.log(editorState);\r\n    this.setState({\r\n      editorState,\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    //Category//\r\n    axiosConfig\r\n      .get(\"admin/Rashilist\")\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          RashiT: response.data.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    //Rashi//\r\n    axiosConfig\r\n      .get(\"admin/getallCategory\")\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          CategoryC: response.data.data,\r\n          CategoryT: response.data.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  changeHandler1 = (e) => {\r\n    this.setState({ status: e.target.value });\r\n  };\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    axiosConfig\r\n      .post(\"/admin/adCat_horscope\", this.state)\r\n\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        this.props.history.push(\"/app/categoryhoroscope/catehoroscopelist\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"Add Horoscope\"\r\n          breadCrumbParent=\" Horoscope Mangement\"\r\n          breadCrumbActive=\"Add Horoscope\"\r\n        />\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Add Horoscope\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/categoryhoroscope/catehoroscopelist\")\r\n                    }\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row>\r\n                {/* <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                  <Label>Title</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    placeholder=\"Enter Title\"\r\n                    value={this.state.title}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col> */}\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Title</Label>\r\n                  <CustomInput\r\n                    type=\"select\"\r\n                    name=\"category1\"\r\n                    value={this.state.category1}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option>Select Title</option>\r\n                    {this.state.CategoryT?.map((allCategory1) => (\r\n                      <option value={allCategory1?._id} key={allCategory1?._id}>\r\n                        {allCategory1?.title}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Rashi</Label>\r\n                  <CustomInput\r\n                    type=\"select\"\r\n                    name=\"rashiId\"\r\n                    value={this.state.rashiId}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option>Select Rashi</option>\r\n                    {this.state.RashiT?.map((allRashi) => (\r\n                      <option value={allRashi?._id} key={allRashi?._id}>\r\n                        {allRashi?.rashi_title}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </Col>\r\n                {/* <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                  <Label>Rashi</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"category\"\r\n                    placeholder=\"Enter MRP\"\r\n                    value={this.state.category}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col> */}\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Category</Label>\r\n                  <CustomInput\r\n                    type=\"select\"\r\n                    name=\"category\"\r\n                    value={this.state.category}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option>Select Title</option>\r\n                    {this.state.CategoryC?.map((allCategory) => (\r\n                      <option value={allCategory?._id} key={allCategory?._id}>\r\n                        {allCategory?.category}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </Col>\r\n                {/* <Col lg=\"12\" md=\"12\" sm=\"12\" className=\"mb-2\">\r\n                  <Label>Category</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"category\"\r\n                    placeholder=\"Enter MRP\"\r\n                    value={this.state.category}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col> */}\r\n                {/* <Col lg=\"12\" md=\"12\" sm=\"12\" className=\"mb-2\">\r\n                  <Label>Description</Label>\r\n                  <Editor\r\n                    // editorState={editorState}\r\n                    wrapperClassName=\"demo-wrapper\"\r\n                    editorClassName=\"demo-editor\"\r\n                    value={this.state.desc}\r\n                    onEditorStateChange={this.onEditorStateChange}\r\n                  />\r\n                </Col> */}\r\n                <Col lg=\"12\" md=\"12\" sm=\"12\" className=\"mb-2\">\r\n                  <Label>Description</Label>\r\n                  <textarea\r\n                    className=\"form-control\"\r\n                    placeholder=\"Description...\"\r\n                    name=\"desc\"\r\n                    value={this.state.desc}\r\n                    onChange={this.changeHandler}\r\n                  ></textarea>\r\n                </Col>\r\n              </Row>\r\n              {/* <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                <Label className=\"mb-1\">Status</Label>\r\n                <div\r\n                  className=\"form-label-group\"\r\n                  onChange={(e) => this.changeHandler1(e)}\r\n                >\r\n                  <input\r\n                    style={{ marginRight: \"3px\" }}\r\n                    type=\"radio\"\r\n                    name=\"status\"\r\n                    value=\"Active\"\r\n                  />\r\n                  <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                  <input\r\n                    style={{ marginRight: \"3px\" }}\r\n                    type=\"radio\"\r\n                    name=\"status\"\r\n                    value=\"Inactive\"\r\n                  />\r\n                  <span style={{ marginRight: \"3px\" }}>Inactive</span>\r\n                </div>\r\n              </Col> */}\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mb-1\"\r\n                  >\r\n                    Save\r\n                  </Button.Ripple>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AddCateHoro;\r\n"],"sourceRoot":""}